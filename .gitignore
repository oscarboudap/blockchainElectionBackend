# Ignore the Cargo build directory
/target/

# Ignore the Cargo.lock file for libraries (for libraries, not your app)
Cargo.lock

# Ignore the compiled binary files
/voting_backend

# Ignore the default Rust configuration files
.idea/
.vscode/

# Ignore environment configuration files
.env

# Ignore Rust editor files
*.rs.bk
*.rs~

# Ignore the debug and release profiles
/debug/
/release/

# Ignore coverage output
/coverage/

# Ignore package-lock.json (if using npm or yarn)
package-lock.json

# Ignore node_modules folder
node_modules/

# Ignore .env files (used for environment-specific variables in development)
.env.local
.env.development
.env.production
.env.test

# Ignore log files
*.log

# Ignore build artifacts (from npm or yarn)
build/
dist/

# Ignore files generated by rustfmt
rustfmt.toml

# Ignore IDE-specific files (from JetBrains, VSCode, etc.)
.idea/
.vscode/

# Ignore any backup files
*~ 

# Ignore files created by Cargo (for testing)
*.dSYM

# Ignore files generated by the test or build process
*.profraw
*.profdata

# Ignore any secrets or certificates
*.pem
*.crt
*.key

# Ignore Docker-related files (if you are not versioning your Dockerfiles)
docker-compose.override.yml
Dockerfile*

# Ignore other temporary files created by Rust or other tools
*.tmp
*.bak

# Ignore the Mac system files
.DS_Store
Thumbs.db

# Ignore npm-debug.log file (created by npm in case of errors)
npm-debug.log

# Ignore yarn.lock if using Yarn (alternative to package-lock.json)
yarn.lock
